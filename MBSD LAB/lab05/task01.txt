#include <msp430.h> 

/*
 * main.c
 */
int main(void) {
    WDTCTL = WDTPW | WDTHOLD;   // Stop watchdog timer
    PM5CTL0 &= ~LOCKLPM5;       // Disable high-impedance mode to enable GPIOs

    P1DIR |= BIT0;              // Set P1.0 as output (LED)
    P1OUT &= ~BIT0;             // Ensure LED is off initially

    P1DIR &= ~BIT2;             // Set P1.2 as input (Button)
    P1REN |= BIT2;              // Enable pull-up/down resistor
    P1OUT |= BIT2;              // Set pull-up resistor

    P1IE  |= BIT2;              // Enable interrupt on P1.2
    P1IES |= BIT2;              // Interrupt on high-to-low transition (falling edge)
    P1IFG &= ~BIT2;             // Clear interrupt flag

    __bis_SR_register(GIE);     // Enable global interrupts

    while(1) {
        __no_operation();       // Low power idle
    }
}

// Interrupt Service Routine for P1
#pragma vector = PORT1_VECTOR
__interrupt void port_1(void) {
    P1OUT ^= BIT0;              // Toggle LED P1.0
    P1IFG &= ~BIT2;             // Clear interrupt flag
}
